@Grab(group='org.codehaus.groovy.modules.http-builder', module='http-builder', version='0.7.1')
import groovy.json.JsonSlurper
import groovyx.net.http.RESTClient

// File containing the JSON data
def jsonFile = new File('vulnerability.json')

// Read and parse the JSON
def jsonData = new JsonSlurper().parse(jsonFile)

// JFrog API Configuration
def jfrogUrl = 'https://csgprdusw2reposaas.jfrog.io/api/vulnerabilities'
def jfrogUsername = 'shivani.agrahari@cloud.com'
def jfrogPassword = 'Khushboo3597@'

// Helper to post data to JFrog
def postToJFrog(vulnerability) {
    def client = new RESTClient(jfrogUrl)
    client.auth.basic(jfrogUsername, jfrogPassword)

    try {
        def response = client.post(
            body: vulnerability,
            requestContentType: 'application/json'
        )
        println "Successfully posted vulnerability: ${vulnerability.name}, Response: ${response.status}"
    } catch (Exception e) {
        println "Failed to post vulnerability: ${vulnerability.name}, Error: ${e.message}"
    }
}

// Filter vulnerabilities with critical or high severity and post to JFrog
jsonData.vulnerabilities.each { vulnerability ->
    if (vulnerability.severity.toLowerCase() in ['critical', 'high']) {
        println "Found ${vulnerability.severity} severity vulnerability: ${vulnerability.name}"
        
        def payload = [
            name: vulnerability.name,
            severity: vulnerability.severity,
            description: vulnerability.description,
            library: vulnerability.library,
            fix: vulnerability.topFix
        ]
        postToJFrog(payload)
    }
}
